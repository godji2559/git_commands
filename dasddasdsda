[33mcommit ad3fedff8ba1c970ac297f66ff24fc16fa93cb0c[m
Merge: 5a74c89 5ed9b29
Author: godgi2559 <godgi2559@yandex.ru>
Date:   Fri Mar 1 13:26:03 2024 +0300

    merge

[1mdiff --cc branch[m
[1mindex 6d3dfa8,94f6cf4..2fad096[m
[1m--- a/branch[m
[1m+++ b/branch[m
[36m@@@ -11,3 -11,109 +11,112 @@@[m [muser@DESKTOP-V6CC4NK MINGW64 /d/HCIE/gi[m
  $ git branch -v[m
  * master 464563a how to rename files[m
  [m
[32m++<<<<<<< HEAD[m
[32m++=======[m
[32m+ [m
[32m+ //для создания ветки и переход на нее[m
[32m+ git branch branch[m
[32m+ git checkout feature[m
[32m+ [m
[32m+ //для создания ветки и сразу переключения на нее(две команды в одной)[m
[32m+ git chechout -b branch[m
[32m+ [m
[32m+ [m
[32m+ //Если понадобилось переключиться на другую ветку, но при этом есть [m
[32m+ //незакомиченные измененния в текущей ветке[m
[32m+ //Если изменения не нужны и мы готовы с ними расстаться:[m
[32m+ [m
[32m+ git checkout --force master //переключаемся на другую ветку[m
[32m+ git checkout --force HEAD //остаемся на ветке, изменения теряются[m
[32m+ [m
[32m+ //А если изменения таки нужно сохранить, и при этом переключиться, то [m
[32m+ //используем команду git stash, она архивирует наши изменения[m
[32m+ [m
[32m+ git stash[m
[32m+ //после этого можем переключиться туда и обратно и вернуть изменения командой:[m
[32m+ git stash pop[m
[32m+ [m
[32m+ [m
[32m+ //теперь если нам нужно новое сохрание сохранить в другой пока не созданной[m
[32m+ //ветке, то есть если мы сделали изменения, но в мастер ветке их сохранят [m
[32m+ //не хотим[m
[32m+ [m
[32m+ git chechout -b имяветки[m
[32m+ [m
[32m+ //А если мы сделали изменения в мастер ветки,но поняли, что они тут неуместны[m
[32m+ //и хотим их переместить в другую пока не созданную ветку[m
[32m+ //делаем это из другой не мастер ветки и указываем коммит к которому[m
[32m+ нужно верниться[m
[32m+ [m
[32m+ git branch -f master 54a4[m
[32m+ git checkout -B master 54a4[m
[32m+ [m
[32m+ [m
[32m+ [m
[32m+ //чтобы перейти к определенному коммиту[m
[32m+ [m
[32m+ git checkout 54a4 index(имя файла)[m
[32m+ [m
[32m+ //В этом случае мы переходим на этот коммит и он сразу добавляется в индекс[m
[32m+ //А если нужно сбросить файл из индекса, то делаем[m
[32m+ [m
[32m+ git reset index.htm[m
[32m+ git reset -- branch (branch - это имя файла, a -- это указание что это именно путь)[m
[32m+ git reset -- index[m
[32m+ [m
[32m+ [m
[32m+ //Если мы внесли изменения в рабочей директории, и хотим их удалить, то есть[m
[32m+ //вернуться к последнему коммиту этого файла[m
[32m+ [m
[32m+ [m
[32m+ git checkout HEAD index.html[m
[32m+ [m
[32m+ //а если нам надо вернуться к изменениям из индека[m
[32m+ [m
[32m+ git checkout <путь>[m
[32m+ [m
[32m+ [m
[32m+ //переключение на ветку[m
[32m+ [m
[32m+ git checkout master[m
[32m+ [m
[32m+ //переключение на путь[m
[32m+ [m
[32m+ git checkout -- master[m
[32m+ [m
[32m+ [m
[32m+ //смотрим логи[m
[32m+ [m
[32m+ git log[m
[32m+ git log --oneline[m
[32m+ git log master --oneline[m
[32m+ [m
[32m+ git show 2702[m
[32m+ [m
[32m+ [m
[32m+ //а чтобы посмотреть коммит на один шаг назад[m
[32m+ [m
[32m+ git show HEAD~ (где ~ это количество шагов назад)[m
[32m+ [m
[32m+ [m
[32m+ //вместо тильд можно использовать цифры[m
[32m+ [m
[32m+ git show HEAD~2[m
[32m+ [m
[32m+ [m
[32m+ [m
[32m+ //А чтобы посмотреть файл сохраненный коммит, его содержание[m
[32m+ [m
[32m+ git show HEAD~:index.html[m
[32m+ [m
[32m+ [m
[32m+ //вместо HEAD можно использовать название ветки, тогда мы увидим последний коммит этого файла[m
[32m+ [m
[32m+ git show master:index[m
[32m+ [m
[32m+ [m
[32m+ //чтобы искать по комментрию коммита. Поиск будем по всем веткам и мы увидим [m
[32m+ последний коммит с искомым словом[m
[32m+ [m
[32m+ git show :/слово[m
[32m++>>>>>>> branch[m
